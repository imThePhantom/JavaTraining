<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-init-method="init" default-destroy-method="destroy">

	<context:annotation-config />
	<aop:aspectj-autoproxy />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/SPRINGTUT" />
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

	<bean id="studentDAO" class="com.phantom.springbean.dao.StudentDAO">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<aop:config>
		<aop:aspect id="log" ref="logging">
			<aop:pointcut id="selectAll"
				expression="execution(* com.phantom.springbean.aop.*.*())" />
			<aop:before method="beforeAdvice" pointcut-ref="selectAll" />
			<aop:after method="afterAdvice" pointcut-ref="selectAll" />
			<aop:after-returning method="afterReturningAdvice"
				returning="returnVal" pointcut-ref="selectAll" />
			<aop:after-throwing method="afterThrowingAdvice"
				throwing="e" pointcut-ref="selectAll" />
		</aop:aspect>
	</aop:config>

	<bean id="student" class="com.phantom.springbean.aop.Student">
		<property name="name" value="Phantom" />
		<property name="age" value="23" />
	</bean>
	<bean id="writeSomething" class="com.phantom.springbean.aop.WriteSomething"></bean>
	<bean id="logging" class="com.phantom.springbean.aop.Logging"></bean>
</beans>